{"data":{"site":{"siteMetadata":{"title":"My Collection of Markdowns","description":"This is my collection of various documentation."}},"markdownRemark":{"html":"<p>Some very fundamental basic things</p>\n<h3>Creating an Observable</h3>\n<pre><code class=\"language-typescript\">const source$ = new Observable&#x3C;number>(observer {\n    observer.next(42);\n    observer.complete();\n\n    return function teardown() { console.log('Teardown'); };\n});\n</code></pre>\n<p>When you create a new <strong>Observable</strong>, you pass in an <strong>Observer</strong> which you can emit data to at any point. You also include any tear-down logic such as clearing a timeout or interval, or cancelling an incomplete network request.</p>\n<h3>Create an Observer or data sink</h3>\n<pre><code class=\"language-typescript\">const observer = {\n    next: (x: number) => {\n        console.log(`Next: ${x}`);\n    },\n    complete: () => {\n        console.log(`Complete`);\n    }\n};\n</code></pre>\n<pre><code class=\"language-typescript\">const subscription = number$.subscribe(observer);\n\nconst subscription = array$.subscribe({\n    next: x => console.log(`Next: ${x}`),\n    complete: () => console.log(`Complete`),\n    error: err => console.error(err);\n});\n</code></pre>","excerpt":"Some very fundamental basic things Creating an Observable When you create a new  Observable , you pass in an  Observer  which you can emitâ€¦","fields":{"tagSlugs":["/tags/rxjs","/tags/basic"]},"frontmatter":{"title":"Basic RxJs stuff","tags":["rxjs","basic"],"date":"2019-01-09"}}},"pageContext":{"slug":"/docs/basic-rxjs-stuff/","prev":{"fields":{"slug":"/docs/angular-lifecycles-hooks/"},"frontmatter":{"title":"Angular Lifecycles Hooks","tags":["angular"]}},"next":{"fields":{"slug":"/docs/javascript-basic/"},"frontmatter":{"title":"JavaScript Basics","tags":["fundamentals","basic","javascript"]}}}}