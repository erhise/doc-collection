{"data":{"site":{"siteMetadata":{"title":"My Collection of Markdowns","description":"This is my collection of various documentation."}},"markdownRemark":{"html":"<p>Some basic, general stuff</p>\n<h2>Architecture Considerations</h2>\n<ul>\n<li>App overview</li>\n<li>App features</li>\n<li>Domain security</li>\n<li>Domain rules</li>\n<li>Logging</li>\n<li>Services/Communication</li>\n<li>Data models</li>\n<li>Feature components</li>\n<li>Shared functionality</li>\n</ul>\n<h2>LIFT</h2>\n<ul>\n<li>Locate code quickly</li>\n<li>Identify the code at a glance</li>\n<li>Keep the flattest structure you can</li>\n<li>Try to be DRY</li>\n</ul>\n<h2>Preventing reimport of Core</h2>\n<pre><code class=\"language-javascript\">export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n  if (parentModule) {\n    throw new Error(`${moduleName} has alreay been loaded. Import Core modules in the AppModule only.`);\n  }\n}\n\nimport { throwIfAlreadyLoaded } from './import.guard';\n\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\n  }\n}\n</code></pre>\n<h2>Reference vs. Value Types</h2>\n<p>Short about changeDetection, no updated value and immutability. A valid term to use.</p>","excerpt":"Some basic, general stuff Architecture Considerations App overview App features Domain security Domain rules Logging Services/Communicationâ€¦","fields":{"tagSlugs":["/tags/angular"]},"frontmatter":{"title":"Angular Notes","tags":["angular"],"date":"2019-01-29"}}},"pageContext":{"slug":"/docs/angular-notes/","prev":{"fields":{"slug":"/docs/angular-structure/"},"frontmatter":{"title":"Angular Structure","tags":["angular"]}},"next":{"fields":{"slug":"/docs/fx-json/"},"frontmatter":{"title":"fx json","tags":["json","fx","terminal"]}}}}