{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["TagRoute","_ref","data","pageContext","location","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","tagHeader","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_container__WEBPACK_IMPORTED_MODULE_5__","css","_ref2","map","_ref3","node","slug","fields","title","frontmatter","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","pageQuery"],"mappings":"qOA+BeA,UA1BE,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,YAAaC,EAAeH,EAAfG,SAC7BC,EAAQF,EAARE,IAD4CC,EAEtBJ,EAAKK,kBAA3BC,EAF4CF,EAE5CE,MAAOC,EAFqCH,EAErCG,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEJ,EAFF,IAIf,OACEM,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAQT,SAAUA,GAChBO,OAAAC,EAAA,EAAAD,CAACG,EAAA,EAAD,KACEH,OAAAC,EAAA,EAAAD,CAAA,MAAII,IAAGC,GAAqBN,GAC5BC,OAAAC,EAAA,EAAAD,CAAA,UACGH,EAAMS,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACMC,EAAmCD,EAA7CE,OAAUD,KAAuBE,EAAYH,EAA3BI,YAAeD,MACzC,OACEX,OAAAC,EAAA,EAAAD,CAAA,MAAIa,IAAKJ,GACPT,OAAAC,EAAA,EAAAD,CAACc,EAAA,KAAD,CAAMC,GAAIN,GAAOE,UAY1B,IAAMK,EAAS","file":"component---src-templates-tags-js-949008f1e85da1e0628d.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Layout from '../components/layout';\nimport Container from '../components/container';\n\nconst TagRoute = ({ data, pageContext, location }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`;\n\n  return (\n    <Layout location={location}>\n      <Container>\n        <h1 css={{ marginTop: 0 }}>{tagHeader}</h1>\n        <ul>\n          {edges.map(({ node }) => {\n            const { fields: { slug }, frontmatter: { title } } = node;\n            return (\n              <li key={slug}>\n                <Link to={slug}>{title}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default TagRoute;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}