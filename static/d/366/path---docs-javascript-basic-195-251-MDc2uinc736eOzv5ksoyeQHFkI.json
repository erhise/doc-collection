{"data":{"site":{"siteMetadata":{"title":"My Collection of Markdowns","description":"This is my collection of various documentation."}},"markdownRemark":{"html":"<p>Fundamentals of JavaScript.</p>\n<h3>IIFE with closures</h3>\n<p><strong>IIFE</strong>: Immediately invoked function expression.\nAny variables and functin within the IIFE will continue to exists. But need to make sure to return a reference.</p>\n<pre><code class=\"language-javascript\">const app = (function() {\n    const carId = 123;\n    const getId = function() {\n        return carId;\n    };\n    return {\n        getId: getId\n    };\n})();\nconsole.log(app.getId()); // 123\n</code></pre>\n<h3>Call and apply</h3>\n<p>(move section to basic)</p>\n<pre><code class=\"language-javascript\">const o = {\n    carId: 123,\n    getId: function() {\n        return this.carId;\n    }\n};\n\nconst newCar = { carId: 456 };\nconsole.log(o.getId.call(newCar)); // &#x3C;-- 456\n</code></pre>\n<p>Apply similar to call but you can pass arguments.</p>\n<pre><code class=\"language-javascript\">...\ngetId: function(prefix) {\n    return prefix + this.carId;\n}\nconsole.log(o.getId.apply(newCar, ['id: '])); // id: 456\n</code></pre>\n<h3>Bind</h3>\n<p>Copy of existing function</p>\n<pre><code class=\"language-javascript\">...\nconst newFn = o.getId.bind(newCar);\nconsole.log(newFn()); // 456\n</code></pre>\n<h3>Arrow functions</h3>\n<p>Arrow functions do not have their own <em>this</em> value. <em>this</em> refers to the enclosing context.</p>","excerpt":"Fundamentals of JavaScript. IIFE with closures IIFE : Immediately invoked function expression.\nAny variables and functin within the IIFEâ€¦","fields":{"tagSlugs":["/tags/fundamentals","/tags/basic","/tags/javascript"]},"frontmatter":{"title":"JavaScript Basics","tags":["fundamentals","basic","javascript"],"date":"2019-01-13"}}},"pageContext":{"slug":"/docs/javascript-basic/","prev":{"fields":{"slug":"/docs/basic-rxjs-stuff/"},"frontmatter":{"title":"Basic RxJs stuff","tags":["rxjs","basic"]}},"next":{"fields":{"slug":"/docs/docker/"},"frontmatter":{"title":"Docker","tags":["Docker"]}}}}