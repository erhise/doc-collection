{"version":3,"sources":["webpack:///./src/pages/links/index.js"],"names":["IndexRoute","props","_this","_React$Component","call","this","_isMounted","handleButtonClick","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default","a","mark","_callee","response","wrap","_context","prev","next","setState","bookTitle","axios","get","sent","data","volumeInfo","title","stop","state","url","description","links","handleChange","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8___default","handleSubmit","componentDidMount","_this2","console","log","then","res","Object","keys","forEach","eachLink","push","concat","objectToSave","timestamp","Date","getTime","componentWillUnmount","event","_this$setState","name","target","value","link","post","preventDefault","render","_emotion_core__WEBPACK_IMPORTED_MODULE_9__","_components_layout__WEBPACK_IMPORTED_MODULE_12__","location","_components_container__WEBPACK_IMPORTED_MODULE_13__","onClick","onSubmit","autoComplete","type","onChange","map","index","key","React","Component"],"mappings":"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","file":"component---src-pages-links-index-js-33735345d51c365018ff.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport Layout from '../../components/layout';\nimport Container from '../../components/container';\n\nclass IndexRoute extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      bookTitle: 'notSet',\n      url: '',\n      description: '',\n      links: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    console.log('mounted, doing request');\n    axios.get('https://doc-collection-e7de5.firebaseio.com/links.json')\n      .then(res => {\n        if (this._isMounted) {\n          const links = [];\n          Object.keys(res.data).forEach(eachLink => {\n            links.push(res.data[eachLink]);\n          })\n          this.setState({ links: [...this.state.links, ...links]});\n          const objectToSave = {\n            links,\n            timestamp: new Date().getTime()\n          };\n          console.log(objectToSave);\n          console.log(this.state.links);\n        }\n        console.log(res.data);\n      });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  handleChange(event) {\n    const name = event.target.name;\n    this.setState({ [name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const link = {\n      url: this.state.url,\n      description: this.state.description\n    };\n    console.log(link);\n    axios.post('https://doc-collection-e7de5.firebaseio.com/links.json', link)\n      .then(res => {\n        console.log(res);\n      })\n    this.setState({\n      url: '',\n      description: ''\n    });\n    event.preventDefault();\n  }\n\n  handleButtonClick = async () => {\n    this.setState({ bookTitle: 'loading...' });\n    const response = await axios.get(`https://www.googleapis.com/books/v1/volumes/s1gVAAAAYAAJ`);\n    if (this._isMounted) {\n      this.setState({ bookTitle: response.data.volumeInfo.title });\n    }\n  }\n\n  render() {\n    return (\n      <Layout location={this.props.location}>\n        <Container>\n          <button onClick={this.handleButtonClick}>Get Book Title</button>\n          <pre>{this.state.bookTitle}</pre>\n          <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n            <label>\n              Link:\n              <input type=\"text\" name=\"url\" value={this.state.url} onChange={this.handleChange} />\n            </label>\n            <label>\n              Description:\n              <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n          {this.state.links.map((link, index) => (\n            <div key={index}>\n              <div>url: {link.url}</div>\n              <div>description: {link.description}</div>\n            </div>\n          ))}\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default IndexRoute;\n"],"sourceRoot":""}